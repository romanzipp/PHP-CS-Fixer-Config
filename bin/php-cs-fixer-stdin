#!/usr/bin/env php
<?php

// Inspired from https://gist.github.com/vuon9/be16429f751e12f72e220c18777d9bc7

function is_fixer_command(string $a): bool
{
    return in_array($a, [
        'check',
        'describe',
        'fix',
        'help',
        'list',
        'list-files',
        'list-sets',
        'self-update',
    ]);
}

function error_exit(string $message): void
{
    fwrite(STDERR, $message . PHP_EOL);
    exit(1);
}

$isDebug = false;

// Read file contents from STDIN

$fileContents = file_get_contents('php://stdin');

// Create temp file and save STDIN contents

$tryTmpDirs = [
    sys_get_temp_dir(),
    '.tmp',
];

$createdTempDir = false;

foreach ($tryTmpDirs as $tmpDir) {
    $ok = file_exists($tmpDir) || mkdir($tmpDir, 0777, true);
    if (false === $ok) {
        continue;
    }

    $tmpFile = tempnam($tmpDir, 'fix_');
    if (false === $tmpFile) {
        continue;
    }

    $ok = file_put_contents($tmpFile, $fileContents);
    if (false === $ok) {
        continue;
    }

    $createdTempDir = true;
}

if ( ! $createdTempDir) {
    error_exit('could not save STDIN to temp file');
}

// Read args from CLI and build command to forward

array_shift($argv);

$files = [];
$commandFound = false;
$commandAndArguments = [];

foreach ($argv as $k => $param) {
    if ('' == $param || '-' == $param) {
        continue;
    }

    if ('--debug' == $param) {
        $isDebug = true;
        continue;
    }

    if (is_fixer_command($param)) {
        if ( ! $commandFound) {
            $commandFound = true;
        }

        $commandAndArguments[] = $param;
        continue;
    }

    if ('-' == substr($param, 0, 1)) {
        $commandAndArguments[] = $param;
        continue;
    }

    $files[] = $param;
}

if ( ! $commandFound) {
    error_exit('No php-cs-fixer command provided');
}

if (0 === count($files)) {
    error_exit('No files provided');
}

if (count($files) > 1) {
    error_exit('Only one file allowed');
}

$filePath = $files[0];
if ($isDebug) {
    echo 'Absolute file path: ' . $filePath . PHP_EOL;
}

// Check if PHP-CS-Fixer is installed

$checkFixerBinaryResult = exec('which php-cs-fixer');
if ('' === $checkFixerBinaryResult) {
    error_exit('php-cs-fixer binary not found in $PATH folders');
}

$output = [];
$returnCode = 0;
$arguments = implode(' ', $commandAndArguments);
if ($isDebug) {
    echo 'Command and arguments: ' . $arguments . PHP_EOL;
}

$cmd = sprintf('php-cs-fixer %s %s', $arguments, $tmpFile);
if ($isDebug) {
    echo 'Forwarded command: ' . $cmd . PHP_EOL;
}

// Run the command

exec($cmd, $output, $returnCode);

if ($returnCode) {
    exit($returnCode);
}

echo file_get_contents($tmpFile);

unlink($tmpFile);
